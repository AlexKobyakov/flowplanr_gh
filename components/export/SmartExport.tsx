'use client'

import { useState, useEffect } from 'react'
import { Button } from '@/components/ui/Button'
import { Textarea } from '@/components/ui/Textarea'
import { Brain, Download, Copy, BarChart3, TrendingUp, Target, Lightbulb, CheckCircle } from 'lucide-react'
import { JournalEntry, userStorage } from '@/lib/storage'
import { ExportGenerator } from '@/lib/export-generator'

interface SmartExportProps {
  entries: JournalEntry[]
}

type ExportType = 'productivity' | 'blockers' | 'insights' | 'planning' | 'trends'

export function SmartExport({ entries }: SmartExportProps) {
  const [selectedType, setSelectedType] = useState<ExportType>('productivity')
  const [exportData, setExportData] = useState<string>('')
  const [copyStatus, setCopyStatus] = useState<'idle' | 'copied'>('idle')
  const [isGenerating, setIsGenerating] = useState(false)

  const exportTypes = [
    {
      id: 'productivity' as ExportType,
      title: '–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
      description: '–û–±—â–∏–π –æ–±–∑–æ—Ä —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á',
      icon: BarChart3,
      color: 'text-blue-600'
    },
    {
      id: 'blockers' as ExportType,
      title: '–ê–Ω–∞–ª–∏–∑ –±–ª–æ–∫–µ—Ä–æ–≤',
      description: '–í—ã—è–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π –∏ —Å–ø–æ—Å–æ–±–æ–≤ –∏—Ö —Ä–µ—à–µ–Ω–∏—è',
      icon: Target,
      color: 'text-red-600'
    },
    {
      id: 'insights' as ExportType,
      title: '–†–∞–∑–≤–∏—Ç–∏–µ –∏–Ω—Å–∞–π—Ç–æ–≤',
      description: '–£–≥–ª—É–±–ª–µ–Ω–∏–µ –ø–æ–Ω–∏–º–∞–Ω–∏—è –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è',
      icon: Lightbulb,
      color: 'text-yellow-600'
    },
    {
      id: 'planning' as ExportType,
      title: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è',
      description: '–£–ª—É—á—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ä–∞–±–æ—Ç—ã',
      icon: TrendingUp,
      color: 'text-green-600'
    },
    {
      id: 'trends' as ExportType,
      title: '–ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤',
      description: '–î–∏–Ω–∞–º–∏–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏',
      icon: Brain,
      color: 'text-purple-600'
    }
  ]

  useEffect(() => {
    generateExport()
  }, [selectedType, entries])

  const generateExport = async () => {
    if (entries.length === 0) {
      setExportData('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞. –í–µ–¥–∏—Ç–µ –¥–Ω–µ–≤–Ω–∏–∫ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑.')
      return
    }

    setIsGenerating(true)

    try {
      // –ò–º–∏—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö
      await new Promise(resolve => setTimeout(resolve, 1000))

      const userStats = ExportGenerator.generateUserStats(entries)
      const analysis = ExportGenerator.generateAnalysis(entries)
      const prompts = ExportGenerator.generateSmartPrompts({ user: userStats, analysis, entries })

      let exportText = ''

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —ç–∫—Å–ø–æ—Ä—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
      switch (selectedType) {
        case 'productivity':
          exportText = `=== –ê–ù–ê–õ–ò–ó –ü–†–û–î–£–ö–¢–ò–í–ù–û–°–¢–ò ===

–ü–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞: ${userStats.dateRange}
–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: ${userStats.totalEntries}
–°–µ—Ä–∏—è –≤–µ–¥–µ–Ω–∏—è –¥–Ω–µ–≤–Ω–∏–∫–∞: ${userStats.streakDays} –¥–Ω–µ–π
–°—Ä–µ–¥–Ω–µ–µ –∑–∞–¥–∞—á –≤ –¥–µ–Ω—å: ${userStats.avgTasksPerDay}
–ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${analysis.completionRate}%

–°–∞–º—ã–µ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–µ –¥–Ω–∏: ${analysis.mostProductiveDays.join(', ')}
–û—Å–Ω–æ–≤–Ω—ã–µ –≤—ã–∑–æ–≤—ã: ${analysis.topChallenges.join(', ')}
–¢—Ä–µ–Ω–¥: ${analysis.trendAnalysis}

=== –ü–†–û–ú–ü–¢ –î–õ–Ø CLAUDE ===

${prompts.productivity}

=== –ò–ù–°–¢–†–£–ö–¶–ò–Ø ===
–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø—Ä–æ–º–ø—Ç –≤—ã—à–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ Claude AI –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.`
          break

        case 'blockers':
          exportText = `=== –ê–ù–ê–õ–ò–ó –ë–õ–û–ö–ï–†–û–í ===

–ü–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞: ${userStats.dateRange}
–ü–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –ø–∞—Ç—Ç–µ—Ä–Ω—ã –±–ª–æ–∫–µ—Ä–æ–≤:
${analysis.blockerPatterns.map(pattern => `‚Ä¢ ${pattern}`).join('\n')}

–û—Å–Ω–æ–≤–Ω—ã–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:
${analysis.topChallenges.map(challenge => `‚Ä¢ ${challenge}`).join('\n')}

=== –ü–†–û–ú–ü–¢ –î–õ–Ø CLAUDE ===

${prompts.blockers}

=== –î–ï–¢–ê–õ–¨–ù–´–ï –ó–ê–ü–ò–°–ò –û –°–õ–û–ñ–ù–û–°–¢–Ø–• ===

${entries.slice(0, 5).map(entry => {
  const date = new Date(entry.date).toLocaleDateString('ru-RU')
  let text = `üìÖ ${date}\n`
  if (entry.difficulties) text += `üöß –°–ª–æ–∂–Ω–æ—Å—Ç–∏: ${entry.difficulties}\n`
  if (entry.blockers) text += `üîß –ë–ª–æ–∫–µ—Ä—ã: ${entry.blockers}\n`
  return text
}).join('\n---\n')}

=== –ò–ù–°–¢–†–£–ö–¶–ò–Ø ===
–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø—Ä–æ–º–ø—Ç –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ Claude –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –±–ª–æ–∫–µ—Ä–æ–≤ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –∏—Ö –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏—é.`
          break

        case 'insights':
          exportText = `=== –†–ê–ó–í–ò–¢–ò–ï –ò–ù–°–ê–ô–¢–û–í ===

–ü–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞: ${userStats.dateRange}
–ö–ª—é—á–µ–≤—ã–µ —Ç–µ–º—ã –∏–Ω—Å–∞–π—Ç–æ–≤: ${analysis.insightKeywords.join(', ')}

=== –ü–†–û–ú–ü–¢ –î–õ–Ø CLAUDE ===

${prompts.insights}

=== –ö–û–õ–õ–ï–ö–¶–ò–Ø –ò–ù–°–ê–ô–¢–û–í ===

${entries.filter(entry => entry.insights).slice(0, 10).map(entry => {
  const date = new Date(entry.date).toLocaleDateString('ru-RU')
  return `üìÖ ${date}\nüí° ${entry.insights}`
}).join('\n\n---\n\n')}

=== –ò–ù–°–¢–†–£–ö–¶–ò–Ø ===
–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–º–ø—Ç Claude –¥–ª—è —É–≥–ª—É–±–ª–µ–Ω–∏—è –≤–∞—à–∏—Ö –∏–Ω—Å–∞–π—Ç–æ–≤ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.`
          break

        case 'planning':
          exportText = `=== –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ü–õ–ê–ù–ò–†–û–í–ê–ù–ò–Ø ===

–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:
‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –∑–∞–¥–∞—á –≤ –¥–µ–Ω—å: ${userStats.avgTasksPerDay}
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${analysis.completionRate}%
‚Ä¢ –°–∞–º—ã–µ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–µ –¥–Ω–∏: ${analysis.mostProductiveDays.join(', ')}
‚Ä¢ –°–µ—Ä–∏—è –≤–µ–¥–µ–Ω–∏—è –¥–Ω–µ–≤–Ω–∏–∫–∞: ${userStats.streakDays} –¥–Ω–µ–π

=== –ü–†–û–ú–ü–¢ –î–õ–Ø CLAUDE ===

${prompts.planning}

=== –ü–†–ò–ú–ï–†–´ –ü–õ–ê–ù–ò–†–û–í–ê–ù–ò–Ø ===

${entries.slice(0, 3).map(entry => {
  const date = new Date(entry.date).toLocaleDateString('ru-RU')
  let text = `üìÖ ${date}\n`
  if (entry.priorityA) text += `üöÄ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã: ${entry.priorityA}\n`
  if (entry.dailyTasks) text += `üìã –ó–∞–¥–∞—á–∏: ${entry.dailyTasks}\n`
  if (entry.completed) text += `‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ: ${entry.completed}\n`
  if (entry.tomorrowFocus) text += `üéØ –ó–∞–≤—Ç—Ä–∞: ${entry.tomorrowFocus}\n`
  return text
}).join('\n---\n')}

=== –ò–ù–°–¢–†–£–ö–¶–ò–Ø ===
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–æ–º–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ä–∞–±–æ—Ç—ã.`
          break

        case 'trends':
          exportText = `=== –ê–ù–ê–õ–ò–ó –¢–†–ï–ù–î–û–í ===

–ü–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞: ${userStats.dateRange}
–î–∏–Ω–∞–º–∏–∫–∞: ${analysis.trendAnalysis}
–ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${analysis.completionRate}%

=== –ü–†–û–ú–ü–¢ –î–õ–Ø CLAUDE ===

${prompts.trends}

=== –•–†–û–ù–û–õ–û–ì–ò–Ø –ó–ê–ü–ò–°–ï–ô ===

${entries.slice(0, 7).map(entry => {
  const date = new Date(entry.date).toLocaleDateString('ru-RU')
  const tasks = (entry.dailyTasks || '').split('\n').filter(t => t.trim()).length
  const completed = (entry.completed || '').split('\n').filter(t => t.trim()).length
  const completionRate = tasks > 0 ? Math.round((completed / tasks) * 100) : 0
  
  return `üìÖ ${date} | –ó–∞–¥–∞—á: ${tasks} | –í—ã–ø–æ–ª–Ω–µ–Ω–æ: ${completed} | ${completionRate}%`
}).join('\n')}

=== –ò–ù–°–¢–†–£–ö–¶–ò–Ø ===
–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–º–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤–∞—à–∏—Ö —Ç—Ä–µ–Ω–¥–æ–≤ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.`
          break
      }

      setExportData(exportText)
    } catch (error) {
      setExportData('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
    } finally {
      setIsGenerating(false)
    }
  }

  const handleCopy = async () => {
    try {
      await navigator.clipboard.writeText(exportData)
      setCopyStatus('copied')
      setTimeout(() => setCopyStatus('idle'), 2000)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', error)
    }
  }

  const handleDownload = () => {
    const currentUser = userStorage.getCurrentUser()
    const filename = `flowplanr-${selectedType}-${new Date().toISOString().split('T')[0]}.txt`
    
    const blob = new Blob([exportData], { type: 'text/plain;charset=utf-8' })
    const url = URL.createObjectURL(blob)
    
    const link = document.createElement('a')
    link.href = url
    link.download = filename
    document.body.appendChild(link)
    link.click()
    document.body.removeChild(link)
    URL.revokeObjectURL(url)
  }

  if (entries.length === 0) {
    return (
      <div className="bg-white/95 backdrop-blur-lg rounded-2xl p-8 shadow-2xl text-center">
        <div className="text-6xl mb-4">üß†</div>
        <h3 className="text-xl font-bold text-gray-800 mb-2">–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö</h3>
        <p className="text-gray-600 mb-6">
          –í–µ–¥–∏—Ç–µ –¥–Ω–µ–≤–Ω–∏–∫ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –æ—Ç Claude AI.
        </p>
        <p className="text-sm text-gray-500">
          –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 3-5 –∑–∞–ø–∏—Å–µ–π –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–µ–∑–Ω—ã—Ö –∏–Ω—Å–∞–π—Ç–æ–≤.
        </p>
      </div>
    )
  }

  return (
    <div className="space-y-6">
      {/* Export Type Selection */}
      <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-4">
        {exportTypes.map(type => {
          const Icon = type.icon
          return (
            <button
              key={type.id}
              onClick={() => setSelectedType(type.id)}
              className={`p-4 rounded-lg border-2 transition-all text-left btn-hover ${
                selectedType === type.id
                  ? 'border-blue-500 bg-blue-50'
                  : 'border-gray-200 bg-white hover:border-gray-300'
              }`}
            >
              <Icon className={`w-6 h-6 mb-2 ${type.color}`} />
              <h3 className="font-semibold text-gray-800 mb-1">{type.title}</h3>
              <p className="text-sm text-gray-600">{type.description}</p>
            </button>
          )
        })}
      </div>

      {/* Export Result */}
      <div className="bg-white/95 backdrop-blur-lg rounded-2xl p-6 shadow-2xl">
        <div className="flex items-center justify-between mb-4">
          <h3 className="text-lg font-bold text-gray-800">
            {exportTypes.find(t => t.id === selectedType)?.title}
          </h3>
          
          <div className="flex gap-2">
            <Button
              onClick={handleCopy}
              variant="outline"
              size="sm"
              className="btn-hover"
              disabled={!exportData || isGenerating}
            >
              {copyStatus === 'copied' ? (
                <>
                  <CheckCircle className="w-4 h-4 mr-2 text-green-600" />
                  –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ
                </>
              ) : (
                <>
                  <Copy className="w-4 h-4 mr-2" />
                  –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                </>
              )}
            </Button>
            
            <Button
              onClick={handleDownload}
              variant="outline"
              size="sm"
              className="btn-hover"
              disabled={!exportData || isGenerating}
            >
              <Download className="w-4 h-4 mr-2" />
              –°–∫–∞—á–∞—Ç—å
            </Button>
          </div>
        </div>

        {isGenerating ? (
          <div className="flex items-center justify-center py-12">
            <div className="text-center">
              <div className="w-8 h-8 border-2 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto mb-4"></div>
              <p className="text-gray-600">–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–º–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç...</p>
            </div>
          </div>
        ) : (
          <Textarea
            value={exportData}
            readOnly
            className="min-h-[400px] font-mono text-sm custom-scrollbar export-data"
            placeholder="–ó–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç..."
          />
        )}

        {/* Instructions */}
        <div className="mt-4 p-4 bg-blue-50 rounded-lg">
          <h4 className="font-semibold text-blue-800 mb-2">üìã –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</h4>
          <ol className="text-sm text-blue-700 space-y-1">
            <li>1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–µ–∫—Å—Ç –∏–∑ –ø–æ–ª—è –≤—ã—à–µ</li>
            <li>2. –û—Ç–∫—Ä–æ–π—Ç–µ Claude AI –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ</li>
            <li>3. –í—Å—Ç–∞–≤—å—Ç–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç</li>
            <li>4. –ü–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏!</li>
          </ol>
        </div>
      </div>
    </div>
  )
}